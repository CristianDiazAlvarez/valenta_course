services:
  api:
    build: 
      context: data_api #folder with Dockerfile defining the FastAPI service
      dockerfile: Dockerfile
    container_name: fastapi
    ports:
      - '80:80'
    volumes:
      - ./data_api/data:/data         # keep bind mount to work with data locally
      - ./data_api/main.py:/main.py   # bind mount for live editing
    restart: always

  minio:
    container_name: Minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER= ${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD= ${MINIO_ROOT_PASSWORD}
    image: quay.io/minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data # named volume

    restart: unless-stopped

  mlflow:
    build:
      context: mlflow #folder with Dockerfile defining the MLflow service
      # Assuming Dockerfile is in the mlflow directory
      dockerfile: Dockerfile
    container_name: MLflow
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000 #Minio for model storage
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - minio
    ports:
      - 5001:5000
    volumes:
      - mlflowdb:/app/mlflowdb # named volume
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql # named volume

  jupyter:
    image: jupyter/scipy-notebook:latest
    container_name: Jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work # bind mount to keep your notebooks local
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - JUPYTER_PASSWORD=${JUPYTER_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      - mlflow
      - mysql
    restart: always

volumes:
  minio_data:
    driver: local
  mysql_data:
    driver: local
  mlflowdb:
    driver: local